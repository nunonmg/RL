# SFT Algorithm Configuration
sft:
  max_num_epochs: 3
  max_num_steps: 1000000
  val_period: -1  # Disable validation
  val_batches: 8
  val_global_batch_size: 32
  val_micro_batch_size: 1
  val_at_start: false
  seed: 42

checkpointing:
  enabled: true
  checkpoint_dir: "results/sft_eurollm"
  metric_name: "val_loss"
  higher_is_better: false
  keep_top_k: 3
  save_period: 100
  save_every_epoch: true  # Save checkpoint at the end of every epoch

policy:
  model_name: "/mnt/shared/models/EuroLLM-9B"
  tokenizer:
    name: /mnt/shared/models/EuroLLM-9B
    chat_template: "{% for message in messages %}{% if message['role'] == 'assistant' %}{% set role = 'assistant' %}{% else %}{% set role = message['role'] %}{% endif %}<|im_start|>{{ role }}\n{{ message['content'] | trim }}<|im_end|>\n{% endfor %}{% if add_generation_prompt %}{{'<|im_start|>assistant\n'}}{% endif %}"
  train_global_batch_size: 256
  train_micro_batch_size: 1
  max_total_sequence_length: 8192
  precision: "bfloat16"

  dtensor_cfg:
    enabled: true
    cpu_offload: False
    sequence_parallel: false
    activation_checkpointing: true
    tensor_parallel_size: 4
    context_parallel_size: 1
    custom_parallel_plan: null
    sharding_strategy: "FULL_SHARD"
    mixed_precision: true

  dynamic_batching:
    enabled: false

  sequence_packing:
    enabled: true
    train_mb_tokens: ${mul:${policy.max_total_sequence_length}, ${policy.train_micro_batch_size}}
    algorithm: "modified_first_fit_decreasing"
    sequence_length_round: 64

  # makes the training sequence length divisible by the tensor parallel size
  # this is useful for sequence parallel training
  make_sequence_length_divisible_by: ${policy.dtensor_cfg.tensor_parallel_size}
  max_grad_norm: 1.0

  optimizer:
    name: "torch.optim.AdamW"
    kwargs:
      lr: 7.0e-6
      weight_decay: 0.01
      betas: [0.9, 0.98]
      eps: 1e-5
      # when using Dtensor, we need to set foreach
      # and fused to False
      foreach: False
      fused: False

data:
  max_input_seq_length: ${policy.max_total_sequence_length}
  dataset_name: "openai_format_hf"
  train_data_path: "/mnt/shared/post-training/sft_datasets/EuroBlocks-SFT-0525"
  chat_key: "conversations"
  add_bos: true
  add_eos: true
  add_generation_prompt: true

logger:
  log_dir: "logs"  # Base directory for all logs
  wandb_enabled: false # Make sure you do a ``wandb login [Your API key]'' before running
  tensorboard_enabled: true
  mlflow_enabled: false
  monitor_gpus: true  # If true, will monitor GPU usage and log to wandb and/or tensorboard
  num_val_samples_to_print: 0  # Number of validation samples to pretty print on terminal
  wandb:
    project: "nemo-rl"
    name: "sft-eurollm-9b"
  tensorboard:
    log_dir: "tb_logs-sft-eurollm-9b"
  mlflow:
    experiment_name: "sft-dev"
    run_name: "sft-eurollm-9b"
  gpu_monitoring:
    collection_interval: 10  # How often to collect GPU usage metrics (in seconds)
    flush_interval: 10  # How often to flush GPU usage metrics to the loggers (in seconds)

cluster:
  gpus_per_node: 8
  num_nodes: 1